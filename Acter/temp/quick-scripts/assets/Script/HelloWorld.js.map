{"version":3,"sources":["HelloWorld.js"],"names":["NodeTouchUtil","require","cc","Class","extends","Component","properties","label","default","type","Label","text","img","Node","touchNode","onLoad","string","New","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,IAAIA,gBAAgBC,QAAQ,eAAR,CAApB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SADC;AAKR;AACAC,cAAM,eANE;AAORC,aAAM;AACFJ,qBAAS,IADP;AAEFC,kBAAMP,GAAGW;AAFP,SAPE;;AAYRC,mBAAW;AACPN,qBAAS,IADF;AAEPC,kBAAMP,GAAGW;AAFF;AAZH,KAHP;;AAqBL;AACAE,YAAQ,kBAAY;AAChB,aAAKR,KAAL,CAAWS,MAAX,GAAoB,KAAKL,IAAzB;;AAEAX,sBAAciB,GAAd,CAAkB,KAAKL,GAAvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAKH,KA3FI;;AA6FL;AACAM,YAAQ,gBAAUC,EAAV,EAAc,CAErB;AAhGI,CAAT","file":"HelloWorld.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// var touchMoveScaleX = 0.5;\n// var speed = 200;\n// var maxMoveY = 2;\nvar NodeTouchUtil = require(\"NodeTouchUtil\")\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!',\n        img : {\n            default: null,\n            type: cc.Node\n        },\n\n        touchNode: {\n            default: null,\n            type: cc.Node\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.label.string = this.text;\n\n        NodeTouchUtil.New(this.img);\n\n        // var localPos = this.img.getPosition()\n        // var localRotate = this.img.getRotation()\n        \n        // this.touchNode.on(cc.Node.EventType.TOUCH_START, (event)=>{\n        //     // this.img.setPosition(localPos)\n        //     // this.img.setRotation(localRotate)\n\n        //     var p = event.touch._point\n        //     this._lastTouchPoint = p\n        //     this._rotation = 0\n\n\n        // })\n        \n        // this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, (event)=>{\n        //     var p1 = this._lastTouchPoint\n        //     var p2 = event.touch._point\n        //     var dx = (p2.x - p1.x) * touchMoveScaleX\n        //     var dy = (p2.y - p1.y)\n        //     if ( dx != 0 ) { this._rotation = this._rotation + dx/Math.abs(dx)*0.4 }\n\n        //     if ( this.img.getPosition().y < -maxMoveY + localPos.y ) {\n        //         if ( dy < 0 ) { dy = 0}\n        //     } else if ( this.img.getPosition().y > maxMoveY + localPos.y ) {\n        //         if ( dy > 0 ) { dy = 0}\n        //     }\n\n        //     if ( dy > maxMoveY ) { dy = maxMoveY }\n        //     else if (dy < -maxMoveY ) { dy = -maxMoveY }\n        //     console.log(dy)\n\n\n        //     // this.img.runAction( cc.easeBounceOut(cc.sequence ) )\n            \n        //     this.img.runAction(cc.moveTo(0.5, cc.p(this.img.getPosition().x + dx, this.img.getPosition().y+dy)).easing(cc.easeSineIn()))\n        //     this.img.setRotation(this._rotation)\n\n        //     // this.img.runAction(cc.moveBy(cc.p(dx/100, 0), 0.2))\n        //     // this.img.setPosition(this.img.getPosition().x + dx, this.img.getPosition().y)\n        //     // this.img.runAction( cc.moveBy(cc.p(dx,0), 0.1) ).easing(cc.easeInOut())\n        //     this._lastTouchPoint = cc.p(p2.x, p2.y)\n        // })\n\n\n        // var touchend = () => {\n        //     this._lastTouchPoint = cc.p(0,0)\n        //     this.img.stopAllActions()\n        //     var dt = Math.abs(this._lastTouchPoint.x - localPos.x)/speed\n        //     dt = 0.3\n        //     this.img.runAction(cc.moveTo(dt, localPos).easing(cc.easeIn(3)))\n        //     this.img.runAction(cc.rotateTo(dt, 0, 0).easing(cc.easeIn(3)))\n        // }\n\n        // this.touchNode.on(cc.Node.EventType.TOUCH_END, (event)=>{\n        //     touchend()\n        // })\n\n        // this.touchNode.on(cc.Node.EventType.TOUCH_CANCEL, (event)=>{\n        //     touchend()\n        // })\n\n\n\n\n    },\n\n    // called every frame\n    update: function (dt) {\n\n    },\n});\n"]}